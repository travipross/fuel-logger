name: Main Workflow

on:
  - push
  - pull_request

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.ci.txt ]; then pip install -r requirements.ci.txt; fi
      - name: Lint with black
        run: |
          black --check .

  test:
    runs-on: ubuntu-latest
    if: github.base_ref == 'master' || github.ref == 'refs/heads/master' # run on commits and PRs to master branch
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt', '**/requirements.ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f requirements.ci.txt ]; then pip install -r requirements.ci.txt; fi
          pip install .
      - name: Test with pytest
        run: |
          pytest
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  semantic-release:
    runs-on: ubuntu-latest
    environment: personal
    if: github.base_ref == 'master' || github.ref == 'refs/heads/master' # run on commits and PRs to master branch
    needs:
      - lint
      - test
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
      TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      TWINE_REPOSITORY_URL: ${{ secrets.TWINE_REPOSITORY_URL }}
      DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Log in to Nexus Repo
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.TWINE_USERNAME }}
          password: ${{ secrets.TWINE_PASSWORD }}
      - uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.ci.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install dependencies
        run: |
          if [ -f requirements.ci.txt ]; then pip install -r requirements.ci.txt; fi
      - name: Semantic Release
        if: github.ref == 'refs/heads/master' # if this is the master branch, assume triggered by push
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v3
        with:
          extra_plugins: |
            @semantic-release/exec
      - name: Semantic non-Release
        if: github.ref != 'refs/heads/master' # if this isn't the master branch, assume triggered by PR
        run: |
          echo github.ref = ${{ github.ref }}
          make python build-docker publish-docker
